<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzj.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.zzj.entity.Article" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="brief" property="brief" jdbcType="VARCHAR" />
    <result column="writer" property="writer" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="editdate" property="editdate" jdbcType="TIMESTAMP" />
    <result column="viewnums" property="viewnums" jdbcType="INTEGER" />
    <result column="likenums" property="likenums" jdbcType="INTEGER" />
    <association property="user" resultMap="userResultMap"/>
  </resultMap>
  <resultMap id="userResultMap" type="com.zzj.entity.User" >
    <id column="u.id" property="id" jdbcType="VARCHAR" />
    <result column="u.nickname" property="nickname" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zzj.entity.Article" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    a.id as "id", a.title as "title", a.brief as "brief", a.writer as "writer", a.createdate as "createdate", a.editdate as "editdate", a.viewnums as "viewnums", a.likenums as "likenums",
    u.id as 'u.id',u.nickname as 'u.nickname'
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zzj.entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zzj.entity.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from article a
    left join user u on u.id = a.writer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pageIndex != null" >
      limit  ${pageIndex * pageSize} , ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article a
    left join user u on u.id = a.writer
    where a.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from article
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzj.entity.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzj.entity.Article" >
    insert into article (id, title, brief, 
      writer, createdate, editdate, 
      viewnums, likenums, content
      )
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{brief,jdbcType=VARCHAR}, 
      #{writer,jdbcType=VARCHAR}, #{createdate,jdbcType=TIMESTAMP}, #{editdate,jdbcType=TIMESTAMP}, 
      #{viewnums,jdbcType=INTEGER}, #{likenums,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zzj.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="brief != null" >
        brief,
      </if>
      <if test="writer != null" >
        writer,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="editdate != null" >
        editdate,
      </if>
      <if test="viewnums != null" >
        viewnums,
      </if>
      <if test="likenums != null" >
        likenums,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        #{brief,jdbcType=VARCHAR},
      </if>
      <if test="writer != null" >
        #{writer,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="editdate != null" >
        #{editdate,jdbcType=TIMESTAMP},
      </if>
      <if test="viewnums != null" >
        #{viewnums,jdbcType=INTEGER},
      </if>
      <if test="likenums != null" >
        #{likenums,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzj.entity.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.brief != null" >
        brief = #{record.brief,jdbcType=VARCHAR},
      </if>
      <if test="record.writer != null" >
        writer = #{record.writer,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.editdate != null" >
        editdate = #{record.editdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.viewnums != null" >
        viewnums = #{record.viewnums,jdbcType=INTEGER},
      </if>
      <if test="record.likenums != null" >
        likenums = #{record.likenums,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      writer = #{record.writer,jdbcType=VARCHAR},
      createdate = #{record.createdate,jdbcType=TIMESTAMP},
      editdate = #{record.editdate,jdbcType=TIMESTAMP},
      viewnums = #{record.viewnums,jdbcType=INTEGER},
      likenums = #{record.likenums,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      brief = #{record.brief,jdbcType=VARCHAR},
      writer = #{record.writer,jdbcType=VARCHAR},
      createdate = #{record.createdate,jdbcType=TIMESTAMP},
      editdate = #{record.editdate,jdbcType=TIMESTAMP},
      viewnums = #{record.viewnums,jdbcType=INTEGER},
      likenums = #{record.likenums,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzj.entity.Article" >
    update article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="brief != null" >
        brief = #{brief,jdbcType=VARCHAR},
      </if>
      <if test="writer != null" >
        writer = #{writer,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="editdate != null" >
        editdate = #{editdate,jdbcType=TIMESTAMP},
      </if>
      <if test="viewnums != null" >
        viewnums = #{viewnums,jdbcType=INTEGER},
      </if>
      <if test="likenums != null" >
        likenums = #{likenums,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zzj.entity.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      writer = #{writer,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      editdate = #{editdate,jdbcType=TIMESTAMP},
      viewnums = #{viewnums,jdbcType=INTEGER},
      likenums = #{likenums,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzj.entity.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      brief = #{brief,jdbcType=VARCHAR},
      writer = #{writer,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      editdate = #{editdate,jdbcType=TIMESTAMP},
      viewnums = #{viewnums,jdbcType=INTEGER},
      likenums = #{likenums,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>