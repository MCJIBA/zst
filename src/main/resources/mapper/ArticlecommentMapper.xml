<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzj.mapper.ArticlecommentMapper" >
  <resultMap id="BaseResultMap" type="com.zzj.entity.Articlecomment" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="articleid" property="articleid" jdbcType="VARCHAR" />
    <result column="parentid" property="parentid" jdbcType="VARCHAR" />
    <result column="originuserid" property="originuserid" jdbcType="VARCHAR" />
    <result column="originusername" property="originusername" jdbcType="VARCHAR" />
    <result column="comments" property="comments" jdbcType="VARCHAR" />
    <result column="likenums" property="likenums" jdbcType="DECIMAL" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <association property="user" resultMap="userResultMap"/>
  </resultMap>
  <resultMap id="userResultMap" type="com.zzj.entity.User" >
    <id column="u.id" property="id" jdbcType="VARCHAR" />
    <result column="u.nickname" property="nickname" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    a.id as 'id', a.articleid as 'articleid', a.parentid as 'parentid', u.id as 'originuserid', u.nickname as 'originusername',u.id as 'u.id',u.nickname as 'u.nickname', a.comments as 'comments', a.likenums as 'likenums', a.createdate as 'createdate'
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zzj.entity.ArticlecommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from articlecomment a
    left join user u on u.id = a.originuserid
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from articlecomment a
    where a.id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from articlecomment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzj.entity.ArticlecommentExample" >
    delete from articlecomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzj.entity.Articlecomment" >
    insert into articlecomment (id, articleid, parentid, 
      originuserid, originusername, comments, 
      likenums, createdate)
    values (#{id,jdbcType=VARCHAR}, #{articleid,jdbcType=VARCHAR}, #{parentid,jdbcType=VARCHAR}, 
      #{originuserid,jdbcType=VARCHAR}, #{originusername,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR}, 
      #{likenums,jdbcType=DECIMAL}, #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zzj.entity.Articlecomment" >
    insert into articlecomment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleid != null" >
        articleid,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="originuserid != null" >
        originuserid,
      </if>
      <if test="originusername != null" >
        originusername,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="likenums != null" >
        likenums,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="originuserid != null" >
        #{originuserid,jdbcType=VARCHAR},
      </if>
      <if test="originusername != null" >
        #{originusername,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="likenums != null" >
        #{likenums,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzj.entity.ArticlecommentExample" resultType="java.lang.Integer" >
    select count(*) from articlecomment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update articlecomment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.articleid != null" >
        articleid = #{record.articleid,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null" >
        parentid = #{record.parentid,jdbcType=VARCHAR},
      </if>
      <if test="record.originuserid != null" >
        originuserid = #{record.originuserid,jdbcType=VARCHAR},
      </if>
      <if test="record.originusername != null" >
        originusername = #{record.originusername,jdbcType=VARCHAR},
      </if>
      <if test="record.comments != null" >
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
      <if test="record.likenums != null" >
        likenums = #{record.likenums,jdbcType=DECIMAL},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update articlecomment
    set id = #{record.id,jdbcType=VARCHAR},
      articleid = #{record.articleid,jdbcType=VARCHAR},
      parentid = #{record.parentid,jdbcType=VARCHAR},
      originuserid = #{record.originuserid,jdbcType=VARCHAR},
      originusername = #{record.originusername,jdbcType=VARCHAR},
      comments = #{record.comments,jdbcType=VARCHAR},
      likenums = #{record.likenums,jdbcType=DECIMAL},
      createdate = #{record.createdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzj.entity.Articlecomment" >
    update articlecomment
    <set >
      <if test="articleid != null" >
        articleid = #{articleid,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="originuserid != null" >
        originuserid = #{originuserid,jdbcType=VARCHAR},
      </if>
      <if test="originusername != null" >
        originusername = #{originusername,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="likenums != null" >
        likenums = #{likenums,jdbcType=DECIMAL},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzj.entity.Articlecomment" >
    update articlecomment
    set articleid = #{articleid,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=VARCHAR},
      originuserid = #{originuserid,jdbcType=VARCHAR},
      originusername = #{originusername,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      likenums = #{likenums,jdbcType=DECIMAL},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>